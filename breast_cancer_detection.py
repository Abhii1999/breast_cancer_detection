# -*- coding: utf-8 -*-
"""Breast_Cancer_Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UuNN2TUexqk-rL4rdLeycA6dPwUb2yXl

Data set download link = https://www.kaggle.com/merishnasuwal/breast-cancer-prediction-dataset
"""

import pandas as pd
from google.colab import files 
uploaded = files.upload()
import io
df = pd.read_csv(io.BytesIO(uploaded['Breast_cancer_data.csv']))

df.shape

df.info()

df.head()

df['diagnosis'].value_counts()

X=df.iloc[:,:-1].values
X.shape

Y=df['diagnosis'].values
Y.shape

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, Y, random_state=0, test_size=0.20)

X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

from sklearn import svm
model = svm.SVC()

model.fit(X_train, y_train)

y_pred = model.predict(X_test)
from sklearn.metrics import accuracy_score
print(accuracy_score(y_test, y_pred))

svm_accuracy =accuracy_score(y_test, y_pred)

from sklearn.linear_model import Perceptron

perceptron = Perceptron()
perceptron.fit(X_train, y_train)

y_pred = perceptron.predict(X_test)
from sklearn.metrics import accuracy_score
print(accuracy_score(y_test, y_pred))

perceptron_accuracy = accuracy_score(y_test, y_pred)

# Commented out IPython magic to ensure Python compatibility.
# %%bash
# pip install sklearn-lvq

from sklearn_lvq import GlvqModel

model = GlvqModel()

model.fit(X_train, y_train)

y_pred = model.predict(X_test)
from sklearn.metrics import accuracy_score
print(accuracy_score(y_test, y_pred))

lvq_accuracy = accuracy_score(y_test, y_pred)

import matplotlib.pyplot as plt

plt.plot(['svm_accuracy','perceptron_accuracy','lvq_accuracy'],[svm_accuracy,perceptron_accuracy,lvq_accuracy],marker='o',color='red')
#plt.xticks(['svm_accuracy','perceptron_accuracy','lvq_accuracy'])

